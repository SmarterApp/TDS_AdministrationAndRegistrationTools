/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2016 Regents of the University of California
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 *
 * SmarterApp Open Source Assessment Software Project: http://smarterapp.org
 * Developed by Fairway Technologies, Inc. (http://fairwaytech.com)
 * for the Smarter Balanced Assessment Consortium (http://smarterbalanced.org)
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.rest.external.mappers;

import org.opentestsystem.delivery.testreg.domain.Student;
import org.opentestsystem.delivery.testreg.domain.amqp.BatchStudent;
import org.opentestsystem.delivery.testreg.rest.external.models.StudentBatchDto;
import org.opentestsystem.delivery.testreg.rest.external.models.StudentDeleteBatchDto;
import org.opentestsystem.delivery.testreg.rest.external.models.StudentDto;

import java.text.SimpleDateFormat;

public class StudentMapper {

    public static StudentDto mapFrom(Student student) {
        StudentDto studentDto = new StudentDto();
        studentDto.setStateAbbreviation(student.getStateAbbreviation());
        studentDto.setDistrictIdentifier(student.getDistrictIdentifier());
        studentDto.setInstitutionIdentifier(student.getInstitutionIdentifier());
        studentDto.setSsid(student.getEntityId());
        studentDto.setFirstName(student.getFirstName());
        studentDto.setMiddleName(student.getMiddleName());
        studentDto.setLastName(student.getLastName());
        studentDto.setBirthDate(student.getBirthDate() == null ? null : student.getBirthDate().toLocalDate());
        studentDto.setExternalSsid(student.getExternalSsid());
        studentDto.setSex(student.getGender().toString());
        studentDto.setHispanicOrLatino(student.getHispanicOrLatino().equals("YES") || student.getHispanicOrLatino().equals("0"));
        studentDto.setAmericanIndianOrAlaskaNative(student.getAmericanIndianOrAlaskaNative().equals("YES") || student.getAmericanIndianOrAlaskaNative().equals("0"));
        studentDto.setAsian(student.getAsian().equals("YES") || student.getAsian().equals("0"));
        studentDto.setBlackOrAfricanAmerican(student.getBlackOrAfricanAmerican().equals("YES") || student.getBlackOrAfricanAmerican().equals("0"));
        studentDto.setWhite(student.getWhite().equals("YES") || student.getWhite().equals("0"));
        studentDto.setNativeHawaiianOrPacificIsland(student.getNativeHawaiianOrPacificIsland().equals("YES") || student.getNativeHawaiianOrPacificIsland().equals("0"));
        studentDto.setTwoOrMoreRaces(student.getTwoOrMoreRaces().equals("YES") || student.getTwoOrMoreRaces().equals("0"));
        studentDto.setGradeLevelWhenAssessed(student.getGradeLevelWhenAssessed().toString());
        studentDto.setLanguageCode(student.getLanguageCode());
        studentDto.setFirstEntryDateIntoUsSchool(student.getFirstEntryDateIntoUsSchool() == null ? null : student.getFirstEntryDateIntoUsSchool().toLocalDate());
        studentDto.setLepEntryDate(student.getLepEntryDate() == null ? null : student.getLepEntryDate().toLocalDate());
        studentDto.setLepExitDate(student.getLepExitDate() == null ? null : student.getLepExitDate().toLocalDate());
        studentDto.setTitle3ProgramType(student.getTitle3ProgramType() == null ? null : student.getTitle3ProgramType().toString());
        studentDto.setPrimaryDisabilityType(student.getPrimaryDisabilityType() == null ? null : student.getPrimaryDisabilityType().toString());
        studentDto.setiDEAIndicator(student.getiDEAIndicator().equals("YES") || student.getiDEAIndicator().equals("0"));
        if(student.getSection504Status().equals("YES") || student.getSection504Status().equals("0")) {
            studentDto.setSection504Status(true);
        } else if(student.getSection504Status().equals("NO") || student.getSection504Status().equals("1")) {
            studentDto.setSection504Status(false);
        }
        studentDto.setLepStatus(student.getLepStatus().equals("YES") || student.getLepStatus().equals("0"));
        studentDto.setElpLevel(student.getTitle3ProgressStatus());
        studentDto.setDisadvantageStatus(student.getDisadvantageStatus().equals("YES") || student.getDisadvantageStatus().equals("0"));
        studentDto.setMigrantStatus(student.getMigrantStatus().equals("YES") || student.getMigrantStatus().equals("0"));
        return studentDto;
    }
    
    public static Student mapTo(StudentDto studentDto) {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        Student student = new Student();
        student.setStateAbbreviation(studentDto.getStateAbbreviation());
        student.setDistrictIdentifier(studentDto.getDistrictIdentifier());
        student.setInstitutionIdentifier(studentDto.getInstitutionIdentifier());
        student.setEntityId(studentDto.getSsid());
        student.setFirstName(studentDto.getFirstName());
        student.setMiddleName(studentDto.getMiddleName());
        student.setLastName(studentDto.getLastName());
        if(studentDto.getBirthDate() != null) {
            student.setBirthDate(formatter.format(studentDto.getBirthDate().toDate()));
        }
        student.setExternalSsid(studentDto.getExternalSsid());
        student.setGender(studentDto.getSex());
        student.setHispanicOrLatino(studentDto.isHispanicOrLatino() ? "YES" : "NO");
        student.setAmericanIndianOrAlaskaNative(studentDto.isAmericanIndianOrAlaskaNative() ? "YES" : "NO");
        student.setAsian(studentDto.isAsian() ? "YES" : "NO");
        student.setBlackOrAfricanAmerican(studentDto.isBlackOrAfricanAmerican() ? "YES" : "NO");
        student.setWhite(studentDto.isWhite() ? "YES" : "NO");
        student.setNativeHawaiianOrPacificIsland(studentDto.isNativeHawaiianOrPacificIsland() ? "YES" : "NO");
        student.setTwoOrMoreRaces(studentDto.isTwoOrMoreRaces() ? "YES" : "NO");
        student.setGradeLevelWhenAssessed(studentDto.getGradeLevelWhenAssessed());
        student.setLanguageCode(studentDto.getLanguageCode());
        if(studentDto.getFirstEntryDateIntoUsSchool() != null) {
            student.setFirstEntryDateIntoUsSchool(studentDto.getFirstEntryDateIntoUsSchool() == null ? null : formatter.format(studentDto.getFirstEntryDateIntoUsSchool().toDate()));
        }
        if(studentDto.getLepEntryDate() != null) {
            student.setLepEntryDate(studentDto.getLepEntryDate() == null ? null : formatter.format(studentDto.getLepEntryDate().toDate()));
        }
        if(studentDto.getLepExitDate() != null) {
            student.setLepExitDate(studentDto.getLepExitDate() == null ? null : formatter.format(studentDto.getLepExitDate().toDate()));
        }
        student.setTitle3ProgramType(studentDto.getTitle3ProgramType() == null ? null : studentDto.getTitle3ProgramType());
        student.setPrimaryDisabilityType(studentDto.getPrimaryDisabilityType() == null ? null : studentDto.getPrimaryDisabilityType());
        student.setiDEAIndicator(studentDto.isiDEAIndicator() ? "YES" : "NO");
        if(studentDto.isSection504Status() == null) {
            student.setSection504Status("UNKNOWN/CANNOT PROVIDE");
        } else {
            student.setSection504Status(studentDto.isSection504Status() ? "YES" : "NO");
        }
        student.setLepStatus(studentDto.isLepStatus() ? "YES" : "NO");
        student.setTitle3ProgressStatus(studentDto.getElpLevel());
        student.setDisadvantageStatus(studentDto.isDisadvantageStatus() ? "YES" : "NO");
        student.setMigrantStatus(studentDto.isMigrantStatus() ? "YES" : "NO");
        return student;
    }

    public static BatchStudent MapTo(StudentBatchDto studentBatchDto) {
        BatchStudent batchStudent = new BatchStudent();
        batchStudent.setStudent(StudentMapper.mapTo(studentBatchDto));
        batchStudent.setBatchId(studentBatchDto.getBatchId());
        batchStudent.setStateCode(studentBatchDto.getStateCode());
        batchStudent.setStudentSecurity(studentBatchDto.getStudentSecurity());
        return batchStudent;
    }

    public static BatchStudent MapTo(StudentDeleteBatchDto studentDeleteBatchDto) {
        BatchStudent batchStudent = new BatchStudent();
        batchStudent.setBatchId(studentDeleteBatchDto.getBatchId());
        batchStudent.setStateCode(studentDeleteBatchDto.getStateCode());
        batchStudent.setSsidToDelete(studentDeleteBatchDto.getSsid());
        batchStudent.setStudentSecurity(studentDeleteBatchDto.getStudentSecurity());
        return batchStudent;
    }
}
