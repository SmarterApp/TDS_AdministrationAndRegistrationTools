package org.opentestsystem.delivery.testreg.rest.diagnostic;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.opentestsystem.delivery.testreg.rest.diagnostic.client.RabbitMQHealthCheck;
import org.opentestsystem.delivery.testreg.rest.diagnostic.model.RabbitMQStatus;
import org.springframework.http.MediaType;
import org.springframework.test.web.client.MockRestServiceServer;
import org.springframework.web.client.RestTemplate;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;
import static org.springframework.test.web.client.match.MockRestRequestMatchers.anything;
import static org.springframework.test.web.client.response.MockRestResponseCreators.withSuccess;

public class RabbitMQTest {
    static RestTemplate restTemplate;
    static RabbitMQHealthCheck client;
    static MockRestServiceServer mockServer;

    static String statusBody(String text) {
        return String.format("{\"status\" : \"%s\"}", text);
    }

    static String statusBody(String text, String reason) {
        return String.format("{\"status\" : \"%s\",  \"reason\" : \"%s\"}", text, reason);
    }

    @BeforeClass
    public static void before() {
        restTemplate = new RestTemplate();
        client = new RabbitMQHealthCheck(restTemplate, "host", "user", "password");
    }

    @Before
    public void setUp() {
        mockServer = MockRestServiceServer.createServer(restTemplate);
    }

    @Test
    public void healthyStatus() {
        mockServer.expect(anything()).andRespond(
                withSuccess(statusBody("Ok"), MediaType.APPLICATION_JSON));
        RabbitMQStatus status = client.getStatus();
        assertThat(status.getStatus(), is("Ok"));
    }
}
